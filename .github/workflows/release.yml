name: Release App Builds

on:
  push:
    branches:
    - main

jobs:
    Desktop-Web-Builds:
        strategy:
            fail-fast: false
            matrix:
                settings:
                    - platform: 'macos-latest'
                      args: '--target universal-apple-darwin'
                    - platform: 'ubuntu-latest'
                      # args: ''
                    - platform: 'windows-latest'
                      args: '--target x86_64-pc-windows-msvc'

        runs-on: ${{ matrix.settings.platform }}

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 18

            - name: Rust setup
              uses: dtolnay/rust-toolchain@stable
              with:
                targets: aarch64-apple-darwin, x86_64-apple-darwin, x86_64-pc-windows-msvc, x86_64-unknown-linux-gnu
          
            - name: Install dependencies (ubuntu only)
              if: matrix.settings.platform == 'ubuntu-latest'
              run: |
                sudo apt-get update
                sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libjavascriptcoregtk-4.1-dev
              
    
            - name: Install dependencies
              run: npm install

            - name: Build web and desktop apps
              run: npm run tauri build
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1
            
            - name: Copy Desktop Bundle to S3
              run: aws s3 sync ./src-tauri/target/release/bundle/. s3://aerodis.space/${{ matrix.settings.platform }}

            - name: Copy Web Bundle to S3
              # This condition is just to running a unique time
              if: matrix.settings.platform == 'ubuntu-latest'
              run: aws s3 sync ./dist/. s3://aerodis.space
                

            
    